# Majority taken directly from https://gist.github.com/tsl0922/d79fc1f8097dde660b34 by Shuanglei Tao

set-option -g prefix C-space
unbind-key C-space
bind-key C-space send-prefix
set -g base-index 1

# Easy config reload
bind-key R source-file ~/.tmux.conf \; display-message "tmux.conf reloaded."

# vi is good
setw -g mode-keys vi

# mouse behavior
setw -g mouse on

set-option -g default-terminal xterm-256color

bind-key : command-prompt
bind-key r refresh-client
bind-key L clear-history

bind-key space next-window
bind-key bspace previous-window
bind-key enter next-layout

# use vim-like keys for splits and windows
bind-key v split-window -h
bind-key H split-window -v
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys C-l) || tmux select-pane -R"
bind -n 'C-\' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim$' && tmux send-keys 'C-\\') || tmux select-pane -l"
bind C-l send-keys 'C-l'

bind-key C-o rotate-window

bind-key + select-layout main-horizontal
bind-key = select-layout main-vertical

set-window-option -g other-pane-height 25
set-window-option -g other-pane-width 80
set-window-option -g display-panes-time 1500

bind-key a last-pane
bind-key q display-panes
bind-key c new-window
bind-key t next-window
bind-key T previous-window

bind-key [ copy-mode
bind-key ] paste-buffer

# Setup 'v' to begin selection as in Vim
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# Enable native Mac OS X copy/paste
set-option -g default-command "/bin/bash -c 'which reattach-to-user-namespace >/dev/null && exec reattach-to-user-namespace $SHELL -l || exec $SHELL -l'"

# Allow the arrow key to be used immediately after changing windows
set-option -g repeat-time 0

# Enable undercurl
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Change inactive pane background colour
# set -g window-style 'bg=colour236'
# set -g window-active-style 'bg=colour0'

# Status Bar
set-option -g status-interval 1
set -g status-left-length 50
# set -g status-right-length 150
set-option -g status-style bg=black,fg=white
set-window-option -g window-status-current-style fg=magenta
set-window-option -g window-status-separator ''

set -g status-left "\
#[fg=colour8, bg=colour7]#{?client_prefix,#[bg=blue],} ‚ùê #S \
#[fg=colour7, bg=black]#{?client_prefix,#[fg=blue],}ÓÇ∞#{?window_zoomed_flag, üîç ,}"
set -g status-right ""

set-window-option -g window-status-current-format "\
#[fg=colour214, bold] #I \
#[fg=colour214, bold]#W "

set-window-option -g window-status-format "\
#[fg=colour7] #I \
#[fg=colour7]#W "

set-option -g pane-active-border-style fg=yellow
set-option -g pane-border-style fg=cyan

